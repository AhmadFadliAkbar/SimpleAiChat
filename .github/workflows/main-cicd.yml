name: Simple AIChat CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - develop 
  pull_request:
    branches: [ main ]

jobs:
  integrate-test-inspect:
    name: ⚙ Integrasi, Tes & Inspeksi
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout Kode (Continuous Integration)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Diperlukan untuk analisis SonarQube

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Versi Node.js untuk Next.js terbaru

      - name: 📦 Install Dependensi
        run: npm ci

      - name: 🔨 Build Aplikasi Next.js
        run: npm run build
  
  build-continous-testing:
    name: 🔍 Analisis Kode (Continuous Testing)
    runs-on: ubuntu-latest
    steps:
      - name: 🧪 Jalankan Integration Tests
        run: npm run test:integration
        env:
          CI: true

    build-continous-inspection:
    name: 🔍 Analisis Kode (Continuous Inspection)
    steps:
      - name: ☕ Setup JDK 17 untuk SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📦 Cache paket SonarQube
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🧐 Analisis SonarCloud (Continuous Inspection)
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info